"""Generated message classes for deploymentmanager version v2beta2.

The Deployment Manager API allows users to declaratively configure, deploy and
run complex solutions on the Google Cloud Platform.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from protorpc import messages


package = 'deploymentmanager'


class Deployment(messages.Message):
  """A Deployment object.

  Fields:
    creationTimestamp: [Output Only] Creation timestamp in RFC3339 text format
      .
    description: An optional user-provided description of the deployment.
    fingerprint: Supply the fingerprint value for update requests. The
      fingerprint value is generated by the server and ensures optimistic
      concurrency (so that only one update can be performed at a time). The
      fingerprint changes after each update.
    id: [Output Only] Unique identifier for the resource; defined by the
      server.
    intent: [Input Only] Specifies how to Deployment Manager should apply this
      template. Possible options are PREVIEW, UPDATE, and CANCEL.  PREVIEW
      creates a deployment and creates "shell" resources but does not actually
      instantiate these resources. This allows you to preview what your
      deployment looks like. You can use this intent to preview updates to
      deployments or preview new deployments. You must provide a targetConfig
      with a configuration for this intent. After previewing a deployment, you
      can deploy your resources by making a request with the UPDATE intent or
      you can CANCEL the preview altogether. Note that the deployment will
      still exist after you cancel the preview and you must separately delete
      this deployment if you want to remove it.  UPDATE performs an update to
      the underlying resources in a deployment. If you provide a populated
      targetConfig field with this request, Deployment Manager uses that
      configuration to perform an update. If you had previewed this update
      beforehand, and do not supply a targetConfig or provide an empty
      targetConfig, Deployment Manager uses the last previewed configuration.
      CANCEL cancels an update that is in PREVIEW or UPDATE but does not undo
      any changes already made.
    manifest: [Output Only] URL of the manifest representing the last manifest
      that was successfully deployed.
    name: The name of the deployment, which must be unique within the project.
    state: [Output Only] The current state of the deployment. This can be
      DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING.
    target: [Input Only] The parameters that define your deployment, including
      the deployment configuration and relevant templates.
    updateManifest: [Output Only] URL of the manifest representing the update
      configuration of this deployment.
  """

  creationTimestamp = messages.StringField(1)
  description = messages.StringField(2)
  fingerprint = messages.BytesField(3)
  id = messages.IntegerField(4, variant=messages.Variant.UINT64)
  intent = messages.StringField(5)
  manifest = messages.StringField(6)
  name = messages.StringField(7)
  state = messages.StringField(8)
  target = messages.MessageField('TargetConfiguration', 9)
  updateManifest = messages.StringField(10)


class DeploymentmanagerDeploymentsDeleteRequest(messages.Message):
  """A DeploymentmanagerDeploymentsDeleteRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    project: The project ID for this request.
  """

  deployment = messages.StringField(1, required=True)
  project = messages.StringField(2, required=True)


class DeploymentmanagerDeploymentsGetRequest(messages.Message):
  """A DeploymentmanagerDeploymentsGetRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    project: The project ID for this request.
  """

  deployment = messages.StringField(1, required=True)
  project = messages.StringField(2, required=True)


class DeploymentmanagerDeploymentsInsertRequest(messages.Message):
  """A DeploymentmanagerDeploymentsInsertRequest object.

  Fields:
    deployment: A Deployment resource to be passed as the request body.
    project: The project ID for this request.
  """

  deployment = messages.MessageField('Deployment', 1)
  project = messages.StringField(2, required=True)


class DeploymentmanagerDeploymentsListRequest(messages.Message):
  """A DeploymentmanagerDeploymentsListRequest object.

  Fields:
    filter: A string attribute.
    maxResults: A integer attribute.
    pageToken: A string attribute.
    project: The project ID for this request.
  """

  filter = messages.StringField(1)
  maxResults = messages.IntegerField(2, variant=messages.Variant.UINT32, default=500)
  pageToken = messages.StringField(3)
  project = messages.StringField(4, required=True)


class DeploymentmanagerDeploymentsPatchRequest(messages.Message):
  """A DeploymentmanagerDeploymentsPatchRequest object.

  Enums:
    CreatePolicyValueValuesEnum:
    DeletePolicyValueValuesEnum:
    UpdatePolicyValueValuesEnum:

  Fields:
    createPolicy: A CreatePolicyValueValuesEnum attribute.
    deletePolicy: A DeletePolicyValueValuesEnum attribute.
    deployment: A string attribute.
    deploymentResource: A Deployment resource to be passed as the request
      body.
    project: The project ID for this request.
    updatePolicy: A UpdatePolicyValueValuesEnum attribute.
  """

  class CreatePolicyValueValuesEnum(messages.Enum):
    """CreatePolicyValueValuesEnum enum type.

    Values:
      ACQUIRE: <no description>
      CREATE: <no description>
    """
    ACQUIRE = 0
    CREATE = 1

  class DeletePolicyValueValuesEnum(messages.Enum):
    """DeletePolicyValueValuesEnum enum type.

    Values:
      ABANDON: <no description>
      DELETE: <no description>
    """
    ABANDON = 0
    DELETE = 1

  class UpdatePolicyValueValuesEnum(messages.Enum):
    """UpdatePolicyValueValuesEnum enum type.

    Values:
      PATCH: <no description>
      UPDATE: <no description>
    """
    PATCH = 0
    UPDATE = 1

  createPolicy = messages.EnumField('CreatePolicyValueValuesEnum', 1, default=u'CREATE')
  deletePolicy = messages.EnumField('DeletePolicyValueValuesEnum', 2, default=u'DELETE')
  deployment = messages.StringField(3, required=True)
  deploymentResource = messages.MessageField('Deployment', 4)
  project = messages.StringField(5, required=True)
  updatePolicy = messages.EnumField('UpdatePolicyValueValuesEnum', 6, default=u'PATCH')


class DeploymentmanagerDeploymentsUpdateRequest(messages.Message):
  """A DeploymentmanagerDeploymentsUpdateRequest object.

  Enums:
    CreatePolicyValueValuesEnum:
    DeletePolicyValueValuesEnum:
    UpdatePolicyValueValuesEnum:

  Fields:
    createPolicy: A CreatePolicyValueValuesEnum attribute.
    deletePolicy: A DeletePolicyValueValuesEnum attribute.
    deployment: A string attribute.
    deploymentResource: A Deployment resource to be passed as the request
      body.
    project: The project ID for this request.
    updatePolicy: A UpdatePolicyValueValuesEnum attribute.
  """

  class CreatePolicyValueValuesEnum(messages.Enum):
    """CreatePolicyValueValuesEnum enum type.

    Values:
      ACQUIRE: <no description>
      CREATE: <no description>
    """
    ACQUIRE = 0
    CREATE = 1

  class DeletePolicyValueValuesEnum(messages.Enum):
    """DeletePolicyValueValuesEnum enum type.

    Values:
      ABANDON: <no description>
      DELETE: <no description>
    """
    ABANDON = 0
    DELETE = 1

  class UpdatePolicyValueValuesEnum(messages.Enum):
    """UpdatePolicyValueValuesEnum enum type.

    Values:
      PATCH: <no description>
      UPDATE: <no description>
    """
    PATCH = 0
    UPDATE = 1

  createPolicy = messages.EnumField('CreatePolicyValueValuesEnum', 1, default=u'CREATE')
  deletePolicy = messages.EnumField('DeletePolicyValueValuesEnum', 2, default=u'DELETE')
  deployment = messages.StringField(3, required=True)
  deploymentResource = messages.MessageField('Deployment', 4)
  project = messages.StringField(5, required=True)
  updatePolicy = messages.EnumField('UpdatePolicyValueValuesEnum', 6, default=u'PATCH')


class DeploymentmanagerManifestsGetRequest(messages.Message):
  """A DeploymentmanagerManifestsGetRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    manifest: The name of the manifest for this request.
    project: The project ID for this request.
  """

  deployment = messages.StringField(1, required=True)
  manifest = messages.StringField(2, required=True)
  project = messages.StringField(3, required=True)


class DeploymentmanagerManifestsListRequest(messages.Message):
  """A DeploymentmanagerManifestsListRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    filter: A string attribute.
    maxResults: A integer attribute.
    pageToken: A string attribute.
    project: The project ID for this request.
  """

  deployment = messages.StringField(1, required=True)
  filter = messages.StringField(2)
  maxResults = messages.IntegerField(3, variant=messages.Variant.UINT32, default=500)
  pageToken = messages.StringField(4)
  project = messages.StringField(5, required=True)


class DeploymentmanagerOperationsGetRequest(messages.Message):
  """A DeploymentmanagerOperationsGetRequest object.

  Fields:
    operation: The name of the operation for this request.
    project: The project ID for this request.
  """

  operation = messages.StringField(1, required=True)
  project = messages.StringField(2, required=True)


class DeploymentmanagerOperationsListRequest(messages.Message):
  """A DeploymentmanagerOperationsListRequest object.

  Fields:
    filter: A string attribute.
    maxResults: A integer attribute.
    pageToken: A string attribute.
    project: The project ID for this request.
  """

  filter = messages.StringField(1)
  maxResults = messages.IntegerField(2, variant=messages.Variant.UINT32, default=500)
  pageToken = messages.StringField(3)
  project = messages.StringField(4, required=True)


class DeploymentmanagerResourcesGetRequest(messages.Message):
  """A DeploymentmanagerResourcesGetRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    project: The project ID for this request.
    resource: The name of the resource for this request.
  """

  deployment = messages.StringField(1, required=True)
  project = messages.StringField(2, required=True)
  resource = messages.StringField(3, required=True)


class DeploymentmanagerResourcesListRequest(messages.Message):
  """A DeploymentmanagerResourcesListRequest object.

  Fields:
    deployment: The name of the deployment for this request.
    filter: A string attribute.
    maxResults: A integer attribute.
    pageToken: A string attribute.
    project: The project ID for this request.
  """

  deployment = messages.StringField(1, required=True)
  filter = messages.StringField(2)
  maxResults = messages.IntegerField(3, variant=messages.Variant.UINT32, default=500)
  pageToken = messages.StringField(4)
  project = messages.StringField(5, required=True)


class DeploymentmanagerTypesListRequest(messages.Message):
  """A DeploymentmanagerTypesListRequest object.

  Fields:
    filter: A string attribute.
    maxResults: A integer attribute.
    pageToken: A string attribute.
    project: The project ID for this request.
  """

  filter = messages.StringField(1)
  maxResults = messages.IntegerField(2, variant=messages.Variant.UINT32, default=500)
  pageToken = messages.StringField(3)
  project = messages.StringField(4, required=True)


class DeploymentsListResponse(messages.Message):
  """A response containing a partial list of deployments and a page token used
  to build the next request if the request has been truncated.

  Fields:
    deployments: The deployments contained in this response.
    nextPageToken: A token used to continue a truncated list request (output
      only).
  """

  deployments = messages.MessageField('Deployment', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class ImportFile(messages.Message):
  """A ImportFile object.

  Fields:
    content: The contents of the file.
    name: The name of the file.
  """

  content = messages.StringField(1)
  name = messages.StringField(2)


class Manifest(messages.Message):
  """A Manifest object.

  Fields:
    config: [Output Only] The YAML configuration for this manifest.
    creationTimestamp: Creation timestamp in RFC3339 text format (output
      only).
    evaluatedConfig: [Output Only] The fully-expanded configuration file,
      including any templates and references.
    id: [Output Only] Unique identifier for the resource; defined by the
      server.
    layout: [Output Only] The YAML layout for this manifest.
    name: [Output Only] The name of the manifest.
    selfLink: [Output Only] Self link for the manifest.
  """

  config = messages.StringField(1)
  creationTimestamp = messages.StringField(2)
  evaluatedConfig = messages.StringField(3)
  id = messages.IntegerField(4, variant=messages.Variant.UINT64)
  layout = messages.StringField(5)
  name = messages.StringField(6)
  selfLink = messages.StringField(7)


class ManifestsListResponse(messages.Message):
  """A response containing a partial list of manifests and a page token used
  to build the next request if the request has been truncated.

  Fields:
    manifests: Manifests contained in this list response.
    nextPageToken: A token used to continue a truncated list request.
  """

  manifests = messages.MessageField('Manifest', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class Operation(messages.Message):
  """A Operation object.

  Messages:
    ErrorValue: A ErrorValue object.
    WarningsValueListEntry: A WarningsValueListEntry object.

  Fields:
    clientOperationId: A string attribute.
    creationTimestamp: A string attribute.
    endTime: A string attribute.
    error: A ErrorValue attribute.
    httpErrorMessage: A string attribute.
    httpErrorStatusCode: A integer attribute.
    id: A string attribute.
    insertTime: A string attribute.
    kind: [Output Only] Type of the resource. Always compute#Operation for
      Operation resources.
    name: A string attribute.
    operationType: A string attribute.
    progress: A integer attribute.
    region: A string attribute.
    selfLink: A string attribute.
    startTime: A string attribute.
    status: A string attribute.
    statusMessage: A string attribute.
    targetId: A string attribute.
    targetLink: A string attribute.
    user: A string attribute.
    warnings: A WarningsValueListEntry attribute.
    zone: A string attribute.
  """

  class ErrorValue(messages.Message):
    """A ErrorValue object.

    Messages:
      ErrorsValueListEntry: A ErrorsValueListEntry object.

    Fields:
      errors: A ErrorsValueListEntry attribute.
    """

    class ErrorsValueListEntry(messages.Message):
      """A ErrorsValueListEntry object.

      Fields:
        code: A string attribute.
        location: A string attribute.
        message: A string attribute.
      """

      code = messages.StringField(1)
      location = messages.StringField(2)
      message = messages.StringField(3)

    errors = messages.MessageField('ErrorsValueListEntry', 1, repeated=True)

  class WarningsValueListEntry(messages.Message):
    """A WarningsValueListEntry object.

    Messages:
      DataValueListEntry: A DataValueListEntry object.

    Fields:
      code: A string attribute.
      data: A DataValueListEntry attribute.
      message: A string attribute.
    """

    class DataValueListEntry(messages.Message):
      """A DataValueListEntry object.

      Fields:
        key: A string attribute.
        value: A string attribute.
      """

      key = messages.StringField(1)
      value = messages.StringField(2)

    code = messages.StringField(1)
    data = messages.MessageField('DataValueListEntry', 2, repeated=True)
    message = messages.StringField(3)

  clientOperationId = messages.StringField(1)
  creationTimestamp = messages.StringField(2)
  endTime = messages.StringField(3)
  error = messages.MessageField('ErrorValue', 4)
  httpErrorMessage = messages.StringField(5)
  httpErrorStatusCode = messages.IntegerField(6, variant=messages.Variant.INT32)
  id = messages.IntegerField(7, variant=messages.Variant.UINT64)
  insertTime = messages.StringField(8)
  kind = messages.StringField(9, default=u'deploymentmanager#operation')
  name = messages.StringField(10)
  operationType = messages.StringField(11)
  progress = messages.IntegerField(12, variant=messages.Variant.INT32)
  region = messages.StringField(13)
  selfLink = messages.StringField(14)
  startTime = messages.StringField(15)
  status = messages.StringField(16)
  statusMessage = messages.StringField(17)
  targetId = messages.IntegerField(18, variant=messages.Variant.UINT64)
  targetLink = messages.StringField(19)
  user = messages.StringField(20)
  warnings = messages.MessageField('WarningsValueListEntry', 21, repeated=True)
  zone = messages.StringField(22)


class OperationsListResponse(messages.Message):
  """A response containing a partial list of operations and a page token used
  to build the next request if the request has been truncated.

  Fields:
    nextPageToken: A token used to continue a truncated list request.
    operations: Operations contained in this list response.
  """

  nextPageToken = messages.StringField(1)
  operations = messages.MessageField('Operation', 2, repeated=True)


class Resource(messages.Message):
  """A Resource object.

  Fields:
    finalProperties: [Output Only] The evaluated properties of the resource
      with references expanded. Returned as serialized YAML.
    id: [Output Only] Unique identifier for the resource; defined by the
      server.
    manifest: [Output Only] URL of the manifest representing the current
      configuration of this resource.
    name: [Output Only] The name of the resource as it appears in the YAML
      config.
    properties: [Output Only] The current properties of the resource before
      any references have been filled in. Returned as serialized YAML.
    type: [Output Only] The type of the resource, for example
      ?compute.v1.instance?, or ?replicaPools.v1beta2.instanceGroupManager?
    update: [Output Only] If Deployment Manager is currently updating or
      previewing an update to this resource, the updated configuration appears
      here.
    url: [Output Only] The URL of the actual resource.
  """

  finalProperties = messages.StringField(1)
  id = messages.IntegerField(2, variant=messages.Variant.UINT64)
  manifest = messages.StringField(3)
  name = messages.StringField(4)
  properties = messages.StringField(5)
  type = messages.StringField(6)
  update = messages.MessageField('ResourceUpdate', 7)
  url = messages.StringField(8)


class ResourceUpdate(messages.Message):
  """A ResourceUpdate object.

  Fields:
    errors: [Output Only] List of all errors encountered while trying to enact
      intent.
    finalProperties: [Output Only] The expanded properties of the resource
      with reference values expanded. Returned as serialized YAML.
    intent: [Output Only] The intent of the resource.
    manifest: [Output Only] URL of the manifest representing the update
      configuration of this resource.
    properties: [Output Only] The set of updated properties for this resource,
      before references are expanded. Returned as serialized YAML.
    state: [Output Only] The state of the resource.
  """

  errors = messages.StringField(1, repeated=True)
  finalProperties = messages.StringField(2)
  intent = messages.StringField(3)
  manifest = messages.StringField(4)
  properties = messages.StringField(5)
  state = messages.StringField(6)


class ResourcesListResponse(messages.Message):
  """A response containing a partial list of resources and a page token used
  to build the next request if the request has been truncated.

  Fields:
    nextPageToken: A token used to continue a truncated list request.
    resources: Resources contained in this list response.
  """

  nextPageToken = messages.StringField(1)
  resources = messages.MessageField('Resource', 2, repeated=True)


class StandardQueryParameters(messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    AltValueValuesEnum: Data format for the response.

  Fields:
    alt: Data format for the response.
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters. Overrides userIp if both are provided.
    trace: A tracing token of the form "token:<tokenid>" or "email:<ldap>" to
      include in api requests.
    userIp: IP address of the site where the request originates. Use this if
      you want to enforce per-user limits.
  """

  class AltValueValuesEnum(messages.Enum):
    """Data format for the response.

    Values:
      json: Responses with Content-Type of application/json
    """
    json = 0

  alt = messages.EnumField('AltValueValuesEnum', 1, default=u'json')
  fields = messages.StringField(2)
  key = messages.StringField(3)
  oauth_token = messages.StringField(4)
  prettyPrint = messages.BooleanField(5, default=True)
  quotaUser = messages.StringField(6)
  trace = messages.StringField(7)
  userIp = messages.StringField(8)


class TargetConfiguration(messages.Message):
  """A TargetConfiguration object.

  Fields:
    config: The configuration to use for this deployment.
    imports: Specifies any files to import for this configuration. This can be
      used to import templates or other files. For example, you might import a
      text file in order to use the file in a template.
  """

  config = messages.StringField(1)
  imports = messages.MessageField('ImportFile', 2, repeated=True)


class Type(messages.Message):
  """A resource type supported by Deployment Manager.

  Fields:
    name: Name of the type.
  """

  name = messages.StringField(1)


class TypesListResponse(messages.Message):
  """A response that returns all Types supported by Deployment Manager

  Fields:
    nextPageToken: A token used to continue a truncated list request.
    types: Types supported by Deployment Manager
  """

  nextPageToken = messages.StringField(1)
  types = messages.MessageField('Type', 2, repeated=True)


