"""Generated message classes for logging version v1beta3.

Google Cloud Logging API lets you manage logs, ingest and retrieve log entries
within a log, and manage log sinks and metrics.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from protorpc import messages

from googlecloudapis.apitools.base.py import encoding


package = 'logging'


class Empty(messages.Message):
  """A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance: service Foo { rpc
  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
  """



class ListLogEntriesResponse(messages.Message):
  """Result returned from ListLogEntries.

  Fields:
    entries: A list of log entry resources. Fewer than page_size entries may
      be returned, but next_page_token is the only indication of no more
      results.
    nextPageToken: If there are more results, they may be retrieved by
      invoking ListLogEntries again, supplying this next_page_token as
      page_token in the request. If next_page_token is empty, there were no
      further results.
  """

  entries = messages.MessageField('LogEntry', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class ListLogMetricsResponse(messages.Message):
  """Result returned from ListLogMetrics.

  Fields:
    metrics: The list of metrics returned.
    nextPageToken: If non-empty, then there are more results. This token
      should be used in the next call to ListLogMetrics.
  """

  metrics = messages.MessageField('LogMetric', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class ListLogServiceIndexesResponse(messages.Message):
  """Result returned from ListLogServiceIndexesRequest.

  Fields:
    nextPageToken: A token to retrieve more log service indexes. If
      next_page_token is not empty, addition results may be retrieved by
      calling ListLogServiceIndexes again with page_token set to this value.
    serviceIndexPrefixes: A list of log service index prefixes.
  """

  nextPageToken = messages.StringField(1)
  serviceIndexPrefixes = messages.StringField(2, repeated=True)


class ListLogServiceSinksResponse(messages.Message):
  """Result returned from ListLogServiceSinks.

  Fields:
    sinks: These may be partial sinks where only name is populated.
  """

  sinks = messages.MessageField('LogSink', 1, repeated=True)


class ListLogServicesResponse(messages.Message):
  """Result returned from ListLogServicesRequest.

  Fields:
    logServices: A list of log services.
    nextPageToken: A token to retrieve more ServiceIndex objects. If
      next_page_token is not empty, addition results may be retrieved by
      calling ListLogServices again with page_token set to this value.
  """

  logServices = messages.MessageField('LogService', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class ListLogSinksResponse(messages.Message):
  """Result returned from ListLogSinks.

  Fields:
    sinks: These may be partial sinks where only name is populated.
  """

  sinks = messages.MessageField('LogSink', 1, repeated=True)


class ListLogsResponse(messages.Message):
  """Result returned from ListLogs.

  Fields:
    logs: A list of log resources.
    nextPageToken: Pagination: If there are more results, retrieve them by
      invoking ListLogs again with the same arguments and this
      next_page_token.
  """

  logs = messages.MessageField('Log', 1, repeated=True)
  nextPageToken = messages.StringField(2)


class Log(messages.Message):
  """A log object.

  Fields:
    displayName: Name to be used when displaying the log to the user (e.g., in
      a UI)
    name: REQUIRED: log name
    payloadType: Type URL describing the expected payload type for the log.
  """

  displayName = messages.StringField(1)
  name = messages.StringField(2)
  payloadType = messages.StringField(3)


class LogEntry(messages.Message):
  """An individual entry in a log.

  Messages:
    ProtoPayloadValue: Contains a structured (protocol buffer) log entry. If
      the data type in proto_payload is known by the logging system, JSON
      clients will receive it in JSON; otherwise, the client will receive it
      as a serialized proto and must decode it. See google.protobuf.Any for
      more details.
    StructPayloadValue: Contains "JSON-like" structured data.

  Fields:
    insertId: Unique ID used to deduplicate log entries. If provided, the
      logging service will attempt to reject multiple log entries on the same
      log with the same insert_id that are sent within the previous N minutes.
      Deduplication may occur asynchronously, so the client may not receive an
      error if the entry is recognized as a duplicate.
    log: The log resource that this entry belongs to. This is ignored by
      WriteLogEntries (the log name is instead specified in the URL).
    metadata: Metadata for the log entry.
    protoPayload: Contains a structured (protocol buffer) log entry. If the
      data type in proto_payload is known by the logging system, JSON clients
      will receive it in JSON; otherwise, the client will receive it as a
      serialized proto and must decode it. See google.protobuf.Any for more
      details.
    structPayload: Contains "JSON-like" structured data.
    textPayload: Contains a text representation of the log entry.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ProtoPayloadValue(messages.Message):
    """Contains a structured (protocol buffer) log entry. If the data type in
    proto_payload is known by the logging system, JSON clients will receive it
    in JSON; otherwise, the client will receive it as a serialized proto and
    must decode it. See google.protobuf.Any for more details.

    Messages:
      AdditionalProperty: An additional property for a ProtoPayloadValue
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @ype with
        type URL.
    """

    class AdditionalProperty(messages.Message):
      """An additional property for a ProtoPayloadValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = messages.StringField(1)
      value = messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class StructPayloadValue(messages.Message):
    """Contains "JSON-like" structured data.

    Messages:
      AdditionalProperty: An additional property for a StructPayloadValue
        object.

    Fields:
      additionalProperties: Properties of the object.
    """

    class AdditionalProperty(messages.Message):
      """An additional property for a StructPayloadValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = messages.StringField(1)
      value = messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = messages.MessageField('AdditionalProperty', 1, repeated=True)

  insertId = messages.StringField(1)
  log = messages.StringField(2)
  metadata = messages.MessageField('LogEntryMetadata', 3)
  protoPayload = messages.MessageField('ProtoPayloadValue', 4)
  structPayload = messages.MessageField('StructPayloadValue', 5)
  textPayload = messages.StringField(6)


class LogEntryMetadata(messages.Message):
  """Additional data that is associated with a log entry.

  Enums:
    SeverityValueValuesEnum: The severity of the log entry.

  Messages:
    LabelsValue: Callers are expected to populate one of the following sets of
      labels describing the source of the log entry. App Engine: service_name:
      "appengine.googleapis.com" labels: appengine.googleapis.com/module_id
      appengine.googleapis.com/version_id and one of:
      appengine.googleapis.com/replica_index appengine.googleapis.com/clone_id
      or the Compute Engine labels (resource_type/resource_id) below Compute
      Engine: service_name: "compute.googleapis.com" labels:
      compute.googleapis.com/resource_type = "instance"
      compute.googleapis.com/resource_id

  Fields:
    labels: Callers are expected to populate one of the following sets of
      labels describing the source of the log entry. App Engine: service_name:
      "appengine.googleapis.com" labels: appengine.googleapis.com/module_id
      appengine.googleapis.com/version_id and one of:
      appengine.googleapis.com/replica_index appengine.googleapis.com/clone_id
      or the Compute Engine labels (resource_type/resource_id) below Compute
      Engine: service_name: "compute.googleapis.com" labels:
      compute.googleapis.com/resource_type = "instance"
      compute.googleapis.com/resource_id
    projectId: If the log entry is from a Google Cloud Platform source, this
      must be the project ID of the service that generated the entry.
      Otherwise, the caller may populate this with whatever project name or ID
      is meaningful, or leave it unset.
    projectNumber: This field is populated by the API at ingestion time
    region: If the log entry is from a Google Cloud Platform source, this must
      be the region of the source (e.g., us-central1) if it has one, or unset
      if "region" isn't meaningful for the service. For non-Google Cloud
      Platform sources, the caller may populate this with whatever location
      name is meaningful, or leave it unset.
    serviceName: If the log entry is from a Google Cloud Platform source, this
      must be the official API name of the service (e.g.,
      compute.googleapis.com). Otherwise, the caller may populate this with
      whatever service name is meaningful, or leave it unset.
    severity: The severity of the log entry.
    timeNanos: A string attribute.
    timestamp: REQUIRED: The time the event described by the log entry
      occurred. Timestamps must be later than January 1 1970.
    userId: If the log entry applies to an action taken by an authenticated
      user, this field must contain the user identifier (a fully qualified
      email address) of the user that requested or performed the action. May
      be empty if the event described by the log entry doesn't have an
      associated user.
    zone: If the log entry is from a Google Cloud Platform source, this must
      be the zone of the source (e.g., us-central1-a) if it has one, or unset
      if "zone" isn't meaningful for the service. For non-Google Cloud
      Platform sources, the caller may populate this with whatever location
      name is meaningful, or leave it unset.
  """

  class SeverityValueValuesEnum(messages.Enum):
    """The severity of the log entry.

    Values:
      DEFAULT: <no description>
      DEBUG: <no description>
      INFO: <no description>
      NOTICE: <no description>
      WARNING: <no description>
      ERROR: <no description>
      CRITICAL: <no description>
      ALERT: <no description>
      EMERGENCY: <no description>
    """
    DEFAULT = 0
    DEBUG = 1
    INFO = 2
    NOTICE = 3
    WARNING = 4
    ERROR = 5
    CRITICAL = 6
    ALERT = 7
    EMERGENCY = 8

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(messages.Message):
    """Callers are expected to populate one of the following sets of labels
    describing the source of the log entry. App Engine: service_name:
    "appengine.googleapis.com" labels: appengine.googleapis.com/module_id
    appengine.googleapis.com/version_id and one of:
    appengine.googleapis.com/replica_index appengine.googleapis.com/clone_id
    or the Compute Engine labels (resource_type/resource_id) below Compute
    Engine: service_name: "compute.googleapis.com" labels:
    compute.googleapis.com/resource_type = "instance"
    compute.googleapis.com/resource_id

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(messages.Message):
      """An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = messages.StringField(1)
      value = messages.StringField(2)

    additionalProperties = messages.MessageField('AdditionalProperty', 1, repeated=True)

  labels = messages.MessageField('LabelsValue', 1)
  projectId = messages.StringField(2)
  projectNumber = messages.IntegerField(3)
  region = messages.StringField(4)
  serviceName = messages.StringField(5)
  severity = messages.EnumField('SeverityValueValuesEnum', 6)
  timeNanos = messages.IntegerField(7)
  timestamp = messages.StringField(8)
  userId = messages.StringField(9)
  zone = messages.StringField(10)


class LogError(messages.Message):
  """An object that describes a problem in a sink or the sink's configuration.

  Fields:
    resource: The resource associated with the error. It may be different from
      the sink destination. E.g. the sink may point to a BigQuery dataset, but
      the error may refer to a table resource inside the dataset.
    status: The description of the last error observed.
    timeNanos: The last time the error was observed, in nanoseconds since the
      Unix epoch.
  """

  resource = messages.StringField(1)
  status = messages.MessageField('Status', 2)
  timeNanos = messages.IntegerField(3)


class LogMetric(messages.Message):
  """An object that describes a collected metric associated with a particular
  log. Each LogEntry that matches the filter in this metric will increase the
  value of the metric by 1.

  Fields:
    description: Description of this metric.
    filter: A filter that is applied to a LogEntry that determines whether the
      given LogEntry matches this metric.
    name: The name of this metric. This is a user defined identifier for the
      resource. Allowed characters include letters, numbers, and: / \ $ - _ .
      + ! * ' () %
    projectId: Project ID of the project that this metric belongs to. The user
      does not need to set this value. It is automatically set when the metric
      is created.
  """

  description = messages.StringField(1)
  filter = messages.StringField(2)
  name = messages.StringField(3)
  projectId = messages.StringField(4)


class LogService(messages.Message):
  """A log service object.

  Fields:
    indexKeys: Label keys used when labeling log entries for this service. The
      order of the keys is significant, with higher priority keys coming
      earlier in the list.
    name: The service's name.
  """

  indexKeys = messages.StringField(1, repeated=True)
  name = messages.StringField(2)


class LogSink(messages.Message):
  """An object that describes where a log may be written.

  Fields:
    destination: The resource to send log entries to. The supported sink
      resource types are: Google Cloud Storage:
      storage.googleapis.com/{bucket} bucket.storage.googleapis.com/ Google
      BigQuery:
      bigquery.googleapis.com/projects/{projectId}/datasets/{datasetId}
      Currently the logging service supports at most one sink of each type per
      log or log service resource.
    errors: All active errors found for this sink. [output only]
    name: The name of this sink. This is a client-assigned identifier for the
      resource. This is ignored by UpdateLogSink and UpdateLogServicesSink.
  """

  destination = messages.StringField(1)
  errors = messages.MessageField('LogError', 2, repeated=True)
  name = messages.StringField(3)


class LoggingProjectsLogEntriesListRequest(messages.Message):
  """A LoggingProjectsLogEntriesListRequest object.

  Fields:
    filter: Filter specification. Response includes only entries which are
      selected by this filter. If empty, response is unfiltered.
    orderBy: Sort order. The only LogEntry field supported for sorting is
      metadata.timestamp and the default order is ascending (from older to
      newer). To have entries returned in the opposite (descending) order,
      specify order_by="metadata.timestamp desc".
    pageSize: Maximum number of entries to return per request. Fewer entries
      may be returned.
    pageToken: An opaque token obtained from a prior ListLogEntries response
      (in next_page_token). If this is supplied, other parameters in this
      request are ignored, in favor of the corresponding parameters in the
      original request.
    projectsId: Part of `projectName`. The project resource from which to
      retrieve log entries, for example: "projects/my_project_id".
  """

  filter = messages.StringField(1)
  orderBy = messages.StringField(2)
  pageSize = messages.IntegerField(3, variant=messages.Variant.INT32)
  pageToken = messages.StringField(4)
  projectsId = messages.StringField(5, required=True)


class LoggingProjectsLogServicesIndexesListRequest(messages.Message):
  """A LoggingProjectsLogServicesIndexesListRequest object.

  Fields:
    depth: A limit to the number of levels of the index hierarchy that will be
      expanded. If the depth is 0, it will default to the level specified by
      the prefix field (the number of slash separators). The default empty
      prefix implies a depth of 1. It is an error for depth to be any non-zero
      value less than the number of components in index_prefix.
    indexPrefix: A prefix of the log service indexes to be returned. The
      prefix is a slash separated list of the label values in order
      corresponding to the [LogService
      index_keys][google.logging.v1.LogService.index_keys]. For example use
      "/myModule/" to retrieve App Engine versions associated with myModule.
      The trailing slash terminates the value, while "/myModule" would allow
      retrieval of App Engine modules with names beginning with myModule. An
      prefix component matches all log service indexes. A non-empty prefix
      must begin with "/".
    log: A log resource like /projects/project_id/logs/log_name identifying
      the log for which to list services indexes.
    logServicesId: Part of `serviceName`. See documentation of `projectsId`.
    pageSize: The maximum number of log service index resources to return.
    pageToken: An optional next_page_token from a previous
      ListLogServicesIndexesResult. Other fields are ignored when the
      page_token is not empty.
    projectsId: Part of `serviceName`. A log service resource whose service
      indexes to return (e.g.
      /projects/myProj/logServices/appengine.googleapis.com).
  """

  depth = messages.IntegerField(1, variant=messages.Variant.INT32)
  indexPrefix = messages.StringField(2)
  log = messages.StringField(3)
  logServicesId = messages.StringField(4, required=True)
  pageSize = messages.IntegerField(5, variant=messages.Variant.INT32)
  pageToken = messages.StringField(6)
  projectsId = messages.StringField(7, required=True)


class LoggingProjectsLogServicesListRequest(messages.Message):
  """A LoggingProjectsLogServicesListRequest object.

  Fields:
    log: A log resource like /projects/project_id/logs/log_name identifying
      the log for which to list services. When empty, all services will be
      listed.
    pageSize: The maximum number of LogService objects to return.
    pageToken: An optional next_page_token from a previous
      ListLogServicesResult. Other fields are ignored when the page_token is
      not empty.
    projectsId: Part of `projectName`. The project resource for which to list
      the services.
  """

  log = messages.StringField(1)
  pageSize = messages.IntegerField(2, variant=messages.Variant.INT32)
  pageToken = messages.StringField(3)
  projectsId = messages.StringField(4, required=True)


class LoggingProjectsLogServicesSinksCreateRequest(messages.Message):
  """A LoggingProjectsLogServicesSinksCreateRequest object.

  Fields:
    logServicesId: Part of `serviceName`. See documentation of `projectsId`.
    logSink: A LogSink resource to be passed as the request body.
    projectsId: Part of `serviceName`. The service in which to create a sink.
  """

  logServicesId = messages.StringField(1, required=True)
  logSink = messages.MessageField('LogSink', 2)
  projectsId = messages.StringField(3, required=True)


class LoggingProjectsLogServicesSinksDeleteRequest(messages.Message):
  """A LoggingProjectsLogServicesSinksDeleteRequest object.

  Fields:
    logServicesId: Part of `sinkName`. See documentation of `projectsId`.
    projectsId: Part of `sinkName`. The sink to delete.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logServicesId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)
  sinksId = messages.StringField(3, required=True)


class LoggingProjectsLogServicesSinksGetRequest(messages.Message):
  """A LoggingProjectsLogServicesSinksGetRequest object.

  Fields:
    logServicesId: Part of `sinkName`. See documentation of `projectsId`.
    projectsId: Part of `sinkName`. The sink to return.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logServicesId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)
  sinksId = messages.StringField(3, required=True)


class LoggingProjectsLogServicesSinksListRequest(messages.Message):
  """A LoggingProjectsLogServicesSinksListRequest object.

  Fields:
    logServicesId: Part of `serviceName`. See documentation of `projectsId`.
    projectsId: Part of `serviceName`. The service for which to list sinks.
  """

  logServicesId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsLogServicesSinksUpdateRequest(messages.Message):
  """A LoggingProjectsLogServicesSinksUpdateRequest object.

  Fields:
    logServicesId: Part of `sinkName`. See documentation of `projectsId`.
    logSink: A LogSink resource to be passed as the request body.
    projectsId: Part of `sinkName`. The sink to update.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logServicesId = messages.StringField(1, required=True)
  logSink = messages.MessageField('LogSink', 2)
  projectsId = messages.StringField(3, required=True)
  sinksId = messages.StringField(4, required=True)


class LoggingProjectsLogsDeleteRequest(messages.Message):
  """A LoggingProjectsLogsDeleteRequest object.

  Fields:
    logsId: Part of `logName`. See documentation of `projectsId`.
    projectsId: Part of `logName`. The log resource to delete.
  """

  logsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsLogsEntriesWriteRequest(messages.Message):
  """A LoggingProjectsLogsEntriesWriteRequest object.

  Fields:
    logsId: Part of `logName`. See documentation of `projectsId`.
    projectsId: Part of `logName`. The log resource into which to insert the
      log entries. If the log resource name contains characters that are
      illegal in a URL (for example, "/") they must be URL-encoded (for
      example, as "%2F").
    writeLogEntriesRequest: A WriteLogEntriesRequest resource to be passed as
      the request body.
  """

  logsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)
  writeLogEntriesRequest = messages.MessageField('WriteLogEntriesRequest', 3)


class LoggingProjectsLogsListRequest(messages.Message):
  """A LoggingProjectsLogsListRequest object.

  Fields:
    pageSize: The maximum number of results to return.
    pageToken: An optional next_page_token from a previous ListLogsResponse.
      Other query parameters are ignored when page_token is not empty.
    projectsId: Part of `projectName`. The project name for which to list the
      log resources.
    serviceIndexPrefix: A log service index prefix for which to list logs.
      Only logs containing entries whose metadata included these label values
      (associated with index keys) will be returned. The prefix is a slash
      separated list of values, and need not specify all index labels. An
      empty index (or a single slash) matches all log service indexes.
    serviceName: A service name for which to list logs. Only logs containing
      entries whose metadata included this service name will be returned. If
      empty and service_index_prefix is also empty then all log names are
      returned. To list all log names (regardless of service) leave both the
      service_name and service_index_prefix empty. To list log names
      containing entries with a particular service name (or explicitly empty
      service name) set service_name to the desired value and
      service_index_prefix to "/".
  """

  pageSize = messages.IntegerField(1, variant=messages.Variant.INT32)
  pageToken = messages.StringField(2)
  projectsId = messages.StringField(3, required=True)
  serviceIndexPrefix = messages.StringField(4)
  serviceName = messages.StringField(5)


class LoggingProjectsLogsSinksCreateRequest(messages.Message):
  """A LoggingProjectsLogsSinksCreateRequest object.

  Fields:
    logSink: A LogSink resource to be passed as the request body.
    logsId: Part of `logName`. See documentation of `projectsId`.
    projectsId: Part of `logName`. The log in which to create a sink
  """

  logSink = messages.MessageField('LogSink', 1)
  logsId = messages.StringField(2, required=True)
  projectsId = messages.StringField(3, required=True)


class LoggingProjectsLogsSinksDeleteRequest(messages.Message):
  """A LoggingProjectsLogsSinksDeleteRequest object.

  Fields:
    logsId: Part of `sinkName`. See documentation of `projectsId`.
    projectsId: Part of `sinkName`. The sink to delete.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)
  sinksId = messages.StringField(3, required=True)


class LoggingProjectsLogsSinksGetRequest(messages.Message):
  """A LoggingProjectsLogsSinksGetRequest object.

  Fields:
    logsId: Part of `sinkName`. See documentation of `projectsId`.
    projectsId: Part of `sinkName`. The sink to return.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)
  sinksId = messages.StringField(3, required=True)


class LoggingProjectsLogsSinksListRequest(messages.Message):
  """A LoggingProjectsLogsSinksListRequest object.

  Fields:
    logsId: Part of `logName`. See documentation of `projectsId`.
    projectsId: Part of `logName`. The log for which to list sinks.
  """

  logsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsLogsSinksUpdateRequest(messages.Message):
  """A LoggingProjectsLogsSinksUpdateRequest object.

  Fields:
    logSink: A LogSink resource to be passed as the request body.
    logsId: Part of `sinkName`. See documentation of `projectsId`.
    projectsId: Part of `sinkName`. The sink to update.
    sinksId: Part of `sinkName`. See documentation of `projectsId`.
  """

  logSink = messages.MessageField('LogSink', 1)
  logsId = messages.StringField(2, required=True)
  projectsId = messages.StringField(3, required=True)
  sinksId = messages.StringField(4, required=True)


class LoggingProjectsMetricsCreateRequest(messages.Message):
  """A LoggingProjectsMetricsCreateRequest object.

  Fields:
    logMetric: A LogMetric resource to be passed as the request body.
    projectsId: Part of `projectName`. The project in which to create a
      metric.
  """

  logMetric = messages.MessageField('LogMetric', 1)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsMetricsDeleteRequest(messages.Message):
  """A LoggingProjectsMetricsDeleteRequest object.

  Fields:
    metricsId: Part of `metricName`. See documentation of `projectsId`.
    projectsId: Part of `metricName`. The metric to delete.
  """

  metricsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsMetricsGetRequest(messages.Message):
  """A LoggingProjectsMetricsGetRequest object.

  Fields:
    metricsId: Part of `metricName`. See documentation of `projectsId`.
    projectsId: Part of `metricName`. The metric to return.
  """

  metricsId = messages.StringField(1, required=True)
  projectsId = messages.StringField(2, required=True)


class LoggingProjectsMetricsListRequest(messages.Message):
  """A LoggingProjectsMetricsListRequest object.

  Fields:
    pageSize: Maximum number of results to return.
    pageToken: If non-empty, specifies from where to start returning results.
      This page_token is from a previous call to ListLogsMetrics.
    projectsId: Part of `projectName`. The project name for which to list
      metrics.
  """

  pageSize = messages.IntegerField(1, variant=messages.Variant.INT32)
  pageToken = messages.StringField(2)
  projectsId = messages.StringField(3, required=True)


class LoggingProjectsMetricsUpdateRequest(messages.Message):
  """A LoggingProjectsMetricsUpdateRequest object.

  Fields:
    logMetric: A LogMetric resource to be passed as the request body.
    metricsId: Part of `metricName`. See documentation of `projectsId`.
    projectsId: Part of `metricName`. The metric to update.
  """

  logMetric = messages.MessageField('LogMetric', 1)
  metricsId = messages.StringField(2, required=True)
  projectsId = messages.StringField(3, required=True)


class StandardQueryParameters(messages.Message):
  """Query parameters accepted by all methods.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    bearer_token: OAuth bearer token.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    pp: Pretty-print response.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" or "email:<ldap>" to
      include in api requests.
  """

  f__xgafv = messages.StringField(1)
  access_token = messages.StringField(2)
  alt = messages.StringField(3, default=u'json')
  bearer_token = messages.StringField(4)
  callback = messages.StringField(5)
  fields = messages.StringField(6)
  key = messages.StringField(7)
  oauth_token = messages.StringField(8)
  pp = messages.BooleanField(9, default=True)
  prettyPrint = messages.BooleanField(10, default=True)
  quotaUser = messages.StringField(11)
  trace = messages.StringField(12)


class Status(messages.Message):

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(messages.Message):
    """A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @ype with
        type URL.
    """

    class AdditionalProperty(messages.Message):
      """An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = messages.StringField(1)
      value = messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = messages.IntegerField(1, variant=messages.Variant.INT32)
  details = messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = messages.StringField(3)


class WriteLogEntriesRequest(messages.Message):
  """The parameters to WriteLogEntries.

  Messages:
    CommonLabelsValue: Labels that apply to all entries in this request. If a
      conflicting label key is present in the per-entry LogEntryMetadata.label
      list, it overrides the value specified here. See the documentation for
      LogEntryMetadata.labels for additional notes.

  Fields:
    commonLabels: Labels that apply to all entries in this request. If a
      conflicting label key is present in the per-entry LogEntryMetadata.label
      list, it overrides the value specified here. See the documentation for
      LogEntryMetadata.labels for additional notes.
    entries: Log entries to insert.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class CommonLabelsValue(messages.Message):
    """Labels that apply to all entries in this request. If a conflicting
    label key is present in the per-entry LogEntryMetadata.label list, it
    overrides the value specified here. See the documentation for
    LogEntryMetadata.labels for additional notes.

    Messages:
      AdditionalProperty: An additional property for a CommonLabelsValue
        object.

    Fields:
      additionalProperties: Additional properties of type CommonLabelsValue
    """

    class AdditionalProperty(messages.Message):
      """An additional property for a CommonLabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = messages.StringField(1)
      value = messages.StringField(2)

    additionalProperties = messages.MessageField('AdditionalProperty', 1, repeated=True)

  commonLabels = messages.MessageField('CommonLabelsValue', 1)
  entries = messages.MessageField('LogEntry', 2, repeated=True)


class WriteLogEntriesResponse(messages.Message):
  """Result returned from WriteLogEntries. empty"""


encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
